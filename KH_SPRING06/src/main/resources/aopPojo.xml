<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
		
	<!-- 공통 기능을 제공할 클래스 Bean 목록으로 등록 -->
	<bean id="exeTimeAspect" class="aspect.ExeTimeAspect"></bean>
	
	
	<!-- Aspect 설정 : Advice를 Pointcut에 적용할 것인지 설정 -->
	<!-- 
	aop를 사용할때 aop는 proxy객체를 자동으로 생성 하는데 pointcut에 등록된 클래스들이 만약 어떠한 인터페이스를 상속받는다면 스프링은 자동으로 그 상속받는 인터페이스 타입으로 프록시를 생성한다 
	그래서 만약 main에서 bean객체를 인터페이스가 아니라 클래스 타입으로 사용 하고 싶다면 별도의 설정이 필요하다.
	Pojo 방식일때는
	<aop:config proxy-target-class="true"> 로 설정 해주면 된다.
	-->
	<aop:config proxy-target-class="true">
		<aop:aspect id="measureAspect" ref="exeTimeAspect">
			<aop:pointcut expression="execution(public * calculator..*(..))" id="publicMethod"/>
			<aop:around method="measure" pointcut-ref="publicMethod"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="implCal" class="calculator.ImplCalculator">
	</bean>
	
	<bean id="recCal" class="calculator.RecCalculator">
	</bean>
</beans>
